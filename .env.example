# 
# ==================== APP Config ====================
#
PORT=8000
ENABLE_SWAGGER=1
ENABLE_CORS=1
# If enabled
# sequelize synchronize = true
DEVELOPER_MODE=1
# How long internal CID string for ipfs file
INTERNAL_CID_LENGTH=10

# Database app
# relate with Docker DB container config
# if run app from docker make sure POSTGRES_APP_HOST is db container name.
# if run app using npm from local host, set POSTGRES_APP_HOST = localhost since
# db container is ezposed to localhost.
POSTGRES_APP_HOST=localhost
POSTGRES_APP_PORT=5432
POSTGRES_APP_USER='decendisk'
POSTGRES_APP_PASSWORD='decendisk'
POSTGRES_APP_DB='decendisk'

# passport-jwt
JWT_EXPIRES=3600s
JWT_SECRET=secret_key

# Google credentials
GOOGLE_CLIENT_ID=google_client_id

# Admin Email
# if the below email are sign up / sign in,
# will be automatically assigned as admin.
# comma separated: name@example.com,username@example.com
ADMIN_EMAIL=user@gmail.com

#
# If you run app in docker container, fill this with service name
# example : IPFS_HOST=ipfs -> see docker-compose.yml in ipfs service.
# If you run app in localhost, fill this with localhost
# example : IPFS_HOST=localhost.
IPFS_HOST=localhost

#
# If ipfs kubo in local docker container, this value same as RPC_API value.
# example : IPFS_RPC_API_PORT=5001 -> see below env var : RPC_API
IPFS_RPC_API_PORT=5001

#
# ==================== Docker Config ====================
#

# Docker DB container config
POSTGRES_HOST=db
POSTGRES_PORT=5432
POSTGRES_USER='decendisk'
POSTGRES_PASSWORD='decendisk'
POSTGRES_DB='decendisk'
POSTGRES_DATA_PATH=./data/db

#
# Docker IPFS config
# https://docs.ipfs.tech/install/run-ipfs-inside-docker/#set-up
# NEVER EXPOSE THE RPC_API TO THE PUBLIC INTERNET
#
P2P_PORT=4001
GATEWAY_PORT=127.0.0.1:8080
RPC_API=127.0.0.1:5001
# IPFS Profile: https://github.com/ipfs/kubo/blob/master/docs/config.md#profiles
IPFS_PROFILE=lowpower
IPFS_STAGING=./data/ipfs/staging
IPFS_DATA=./data/ipfs/data